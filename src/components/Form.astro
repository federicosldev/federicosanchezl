---
// Contact Form Component
---

<div class="mt-9">
  <form id="contact-form" class="flex flex-col gap-4 pb-5">
    <input
      id="name"
      name="user_name"
      required
      class="px-3 pt-3 pb-4 border border-primary-purple rounded-xl bg-dark text-2xl text-primary-purple"
      type="text"
      placeholder="Nombre"
    />
    <input
      id="email"
      name="user_email"
      required
      class="px-3 pt-3 pb-4 border border-primary-purple rounded-xl bg-dark text-2xl text-primary-purple"
      type="email"
      placeholder="Email"
    />
    <textarea
      id="message"
      name="message"
      required
      class="px-3 pt-3 pb-4 border border-primary-purple rounded-xl bg-dark text-2xl text-primary-purple"
      placeholder="Mensaje"></textarea>
    <button
      id="submitButton"
      class="px-3 pt-3 pb-4 border border-primary-purple rounded-xl bg-primary-pink hover:bg-dark hover:text-primary-purple text-2xl text-primary-purple transition-colors font-bold"
      type="submit"
    >
      Enviar
    </button>
  </form>
  <p id="status-message" class="text-white"></p>
</div>

<!-- Cargar EmailJS con defer para asegurar que se carga -->
<script
  is:inline
  src="https://cdn.jsdelivr.net/npm/@emailjs/browser@3/dist/email.min.js"
  defer></script>

<!-- Script de inicialización con type="module" y is:inline -->
<script is:inline type="module">
  // Esperar a que EmailJS esté disponible
  function initEmailJS() {
    if (typeof emailjs !== 'undefined') {
      emailjs.init('5RtqdNlugODDFGQcg');
    } else {
      // Si emailjs no está disponible, intentar de nuevo en 100ms
      setTimeout(initEmailJS, 100);
    }
  }

  // Iniciar cuando el DOM esté listo
  document.addEventListener('DOMContentLoaded', initEmailJS);

  // Reiniciar cuando se navega entre páginas con View Transitions
  document.addEventListener('astro:page-load', initEmailJS);
</script>

<!-- Script del formulario con type="module" -->
<script>
  // Esperar a que EmailJS esté completamente cargado
  function waitForEmailJS() {
    return new Promise(resolve => {
      function check() {
        if (typeof window.emailjs !== 'undefined') {
          resolve();
        } else {
          setTimeout(check, 100);
        }
      }
      check();
    });
  }

  // Función principal para inicializar el formulario
  async function initForm() {
    // Esperar a que EmailJS esté disponible
    await waitForEmailJS();

    const form = document.getElementById('contact-form');
    const statusElement = document.getElementById('status-message');

    if (form) {
      // Eliminar listeners previos para evitar duplicados
      const newForm = form.cloneNode(true);
      form.parentNode.replaceChild(newForm, form);

      newForm.addEventListener('submit', async function (e) {
        e.preventDefault();

        const submitButton = document.getElementById('submitButton');
        if (submitButton) {
          submitButton.disabled = true;
        }

        try {
          const response = await emailjs.sendForm(
            'service_x9lnkbl',
            'template_yuixtys',
            this,
            '5RtqdNlugODDFGQcg',
          );

          console.log('SUCCESS!', response.status, response.text);
          if (statusElement) {
            statusElement.textContent = 'Su mensaje fue enviado con éxito';
            statusElement.className = 'text-green-500';
          }
          newForm.reset();
        } catch (error) {
          console.log('FAILED...', error);
          if (statusElement) {
            statusElement.textContent =
              'No se pudo enviar: ' + (error.text || error.message);
            statusElement.className = 'text-red-500';
          }
        } finally {
          if (submitButton) {
            submitButton.disabled = false;
          }
        }
      });
    }
  }

  // Iniciar cuando el DOM esté listo
  document.addEventListener('DOMContentLoaded', initForm);

  // Reiniciar cuando se navega entre páginas con View Transitions
  document.addEventListener('astro:page-load', initForm);
</script>
